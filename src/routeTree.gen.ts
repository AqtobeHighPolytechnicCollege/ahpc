/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as NewsIndexImport } from './routes/news/index'
import { Route as NewsNewsIdImport } from './routes/news/$newsId'
import { Route as ContestResultsContestResultsImport } from './routes/contestResults/contestResults'
import { Route as TeachingStaffTeachingStaffImport } from './routes/TeachingStaff/TeachingStaff'
import { Route as SpecialsSpecialsImport } from './routes/Specials/Specials'
import { Route as NotFoundPageNotFoundPageImport } from './routes/NotFoundPage/NotFoundPage'
import { Route as ContactsContactsImport } from './routes/Contacts/Contacts'
import { Route as CollegeManagementCollegeManagementImport } from './routes/CollegeManagement/CollegeManagement'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const NewsIndexRoute = NewsIndexImport.update({
  id: '/news/',
  path: '/news/',
  getParentRoute: () => rootRoute,
} as any)

const NewsNewsIdRoute = NewsNewsIdImport.update({
  id: '/news/$newsId',
  path: '/news/$newsId',
  getParentRoute: () => rootRoute,
} as any)

const ContestResultsContestResultsRoute =
  ContestResultsContestResultsImport.update({
    id: '/contestResults/contestResults',
    path: '/contestResults/contestResults',
    getParentRoute: () => rootRoute,
  } as any)

const TeachingStaffTeachingStaffRoute = TeachingStaffTeachingStaffImport.update(
  {
    id: '/TeachingStaff/TeachingStaff',
    path: '/TeachingStaff/TeachingStaff',
    getParentRoute: () => rootRoute,
  } as any,
)

const SpecialsSpecialsRoute = SpecialsSpecialsImport.update({
  id: '/Specials/Specials',
  path: '/Specials/Specials',
  getParentRoute: () => rootRoute,
} as any)

const NotFoundPageNotFoundPageRoute = NotFoundPageNotFoundPageImport.update({
  id: '/NotFoundPage/NotFoundPage',
  path: '/NotFoundPage/NotFoundPage',
  getParentRoute: () => rootRoute,
} as any)

const ContactsContactsRoute = ContactsContactsImport.update({
  id: '/Contacts/Contacts',
  path: '/Contacts/Contacts',
  getParentRoute: () => rootRoute,
} as any)

const CollegeManagementCollegeManagementRoute =
  CollegeManagementCollegeManagementImport.update({
    id: '/CollegeManagement/CollegeManagement',
    path: '/CollegeManagement/CollegeManagement',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/CollegeManagement/CollegeManagement': {
      id: '/CollegeManagement/CollegeManagement'
      path: '/CollegeManagement/CollegeManagement'
      fullPath: '/CollegeManagement/CollegeManagement'
      preLoaderRoute: typeof CollegeManagementCollegeManagementImport
      parentRoute: typeof rootRoute
    }
    '/Contacts/Contacts': {
      id: '/Contacts/Contacts'
      path: '/Contacts/Contacts'
      fullPath: '/Contacts/Contacts'
      preLoaderRoute: typeof ContactsContactsImport
      parentRoute: typeof rootRoute
    }
    '/NotFoundPage/NotFoundPage': {
      id: '/NotFoundPage/NotFoundPage'
      path: '/NotFoundPage/NotFoundPage'
      fullPath: '/NotFoundPage/NotFoundPage'
      preLoaderRoute: typeof NotFoundPageNotFoundPageImport
      parentRoute: typeof rootRoute
    }
    '/Specials/Specials': {
      id: '/Specials/Specials'
      path: '/Specials/Specials'
      fullPath: '/Specials/Specials'
      preLoaderRoute: typeof SpecialsSpecialsImport
      parentRoute: typeof rootRoute
    }
    '/TeachingStaff/TeachingStaff': {
      id: '/TeachingStaff/TeachingStaff'
      path: '/TeachingStaff/TeachingStaff'
      fullPath: '/TeachingStaff/TeachingStaff'
      preLoaderRoute: typeof TeachingStaffTeachingStaffImport
      parentRoute: typeof rootRoute
    }
    '/contestResults/contestResults': {
      id: '/contestResults/contestResults'
      path: '/contestResults/contestResults'
      fullPath: '/contestResults/contestResults'
      preLoaderRoute: typeof ContestResultsContestResultsImport
      parentRoute: typeof rootRoute
    }
    '/news/$newsId': {
      id: '/news/$newsId'
      path: '/news/$newsId'
      fullPath: '/news/$newsId'
      preLoaderRoute: typeof NewsNewsIdImport
      parentRoute: typeof rootRoute
    }
    '/news/': {
      id: '/news/'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof NewsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/CollegeManagement/CollegeManagement': typeof CollegeManagementCollegeManagementRoute
  '/Contacts/Contacts': typeof ContactsContactsRoute
  '/NotFoundPage/NotFoundPage': typeof NotFoundPageNotFoundPageRoute
  '/Specials/Specials': typeof SpecialsSpecialsRoute
  '/TeachingStaff/TeachingStaff': typeof TeachingStaffTeachingStaffRoute
  '/contestResults/contestResults': typeof ContestResultsContestResultsRoute
  '/news/$newsId': typeof NewsNewsIdRoute
  '/news': typeof NewsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/CollegeManagement/CollegeManagement': typeof CollegeManagementCollegeManagementRoute
  '/Contacts/Contacts': typeof ContactsContactsRoute
  '/NotFoundPage/NotFoundPage': typeof NotFoundPageNotFoundPageRoute
  '/Specials/Specials': typeof SpecialsSpecialsRoute
  '/TeachingStaff/TeachingStaff': typeof TeachingStaffTeachingStaffRoute
  '/contestResults/contestResults': typeof ContestResultsContestResultsRoute
  '/news/$newsId': typeof NewsNewsIdRoute
  '/news': typeof NewsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/CollegeManagement/CollegeManagement': typeof CollegeManagementCollegeManagementRoute
  '/Contacts/Contacts': typeof ContactsContactsRoute
  '/NotFoundPage/NotFoundPage': typeof NotFoundPageNotFoundPageRoute
  '/Specials/Specials': typeof SpecialsSpecialsRoute
  '/TeachingStaff/TeachingStaff': typeof TeachingStaffTeachingStaffRoute
  '/contestResults/contestResults': typeof ContestResultsContestResultsRoute
  '/news/$newsId': typeof NewsNewsIdRoute
  '/news/': typeof NewsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/CollegeManagement/CollegeManagement'
    | '/Contacts/Contacts'
    | '/NotFoundPage/NotFoundPage'
    | '/Specials/Specials'
    | '/TeachingStaff/TeachingStaff'
    | '/contestResults/contestResults'
    | '/news/$newsId'
    | '/news'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/CollegeManagement/CollegeManagement'
    | '/Contacts/Contacts'
    | '/NotFoundPage/NotFoundPage'
    | '/Specials/Specials'
    | '/TeachingStaff/TeachingStaff'
    | '/contestResults/contestResults'
    | '/news/$newsId'
    | '/news'
  id:
    | '__root__'
    | '/'
    | '/CollegeManagement/CollegeManagement'
    | '/Contacts/Contacts'
    | '/NotFoundPage/NotFoundPage'
    | '/Specials/Specials'
    | '/TeachingStaff/TeachingStaff'
    | '/contestResults/contestResults'
    | '/news/$newsId'
    | '/news/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CollegeManagementCollegeManagementRoute: typeof CollegeManagementCollegeManagementRoute
  ContactsContactsRoute: typeof ContactsContactsRoute
  NotFoundPageNotFoundPageRoute: typeof NotFoundPageNotFoundPageRoute
  SpecialsSpecialsRoute: typeof SpecialsSpecialsRoute
  TeachingStaffTeachingStaffRoute: typeof TeachingStaffTeachingStaffRoute
  ContestResultsContestResultsRoute: typeof ContestResultsContestResultsRoute
  NewsNewsIdRoute: typeof NewsNewsIdRoute
  NewsIndexRoute: typeof NewsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CollegeManagementCollegeManagementRoute:
    CollegeManagementCollegeManagementRoute,
  ContactsContactsRoute: ContactsContactsRoute,
  NotFoundPageNotFoundPageRoute: NotFoundPageNotFoundPageRoute,
  SpecialsSpecialsRoute: SpecialsSpecialsRoute,
  TeachingStaffTeachingStaffRoute: TeachingStaffTeachingStaffRoute,
  ContestResultsContestResultsRoute: ContestResultsContestResultsRoute,
  NewsNewsIdRoute: NewsNewsIdRoute,
  NewsIndexRoute: NewsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/CollegeManagement/CollegeManagement",
        "/Contacts/Contacts",
        "/NotFoundPage/NotFoundPage",
        "/Specials/Specials",
        "/TeachingStaff/TeachingStaff",
        "/contestResults/contestResults",
        "/news/$newsId",
        "/news/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/CollegeManagement/CollegeManagement": {
      "filePath": "CollegeManagement/CollegeManagement.tsx"
    },
    "/Contacts/Contacts": {
      "filePath": "Contacts/Contacts.tsx"
    },
    "/NotFoundPage/NotFoundPage": {
      "filePath": "NotFoundPage/NotFoundPage.tsx"
    },
    "/Specials/Specials": {
      "filePath": "Specials/Specials.tsx"
    },
    "/TeachingStaff/TeachingStaff": {
      "filePath": "TeachingStaff/TeachingStaff.tsx"
    },
    "/contestResults/contestResults": {
      "filePath": "contestResults/contestResults.tsx"
    },
    "/news/$newsId": {
      "filePath": "news/$newsId.tsx"
    },
    "/news/": {
      "filePath": "news/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
